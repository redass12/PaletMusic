{"version":3,"sources":["components/Row/Column/Colum.module.css","App.module.css","components/Table/Table.module.css","components/Row/Row.module.css","hoc/Auxiliary/Auxiliarry.js","components/Slider/Slider.js","components/Row/Column/Column.js","components/Row/Row.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","Slider","className","classes","type","min","max","value","onInput","slide","onChange","Column","ClassSwitch","isClicked","push","active","join","onClick","clicked","Row","cols","rowId","Cols","i","length","Table","Rows","this","map","row","index","Component","App","state","SliderValue","addRow","column","notes","j","id","note","console","log","splice","setState","MoveSliderHandler","event","target","clickedColHandler","colId","synth","Tone","Synth","toMaster","triggerAttackRelease","UncheckColHandler","playMusicHandler","Transport","scheduleRepeat","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,OAAS,sBAAsB,OAAS,sBAAsB,QAAU,yB,kBCA1FD,EAAOC,QAAU,CAAC,IAAM,mB,kCCAxBD,EAAOC,QAAU,CAAC,MAAQ,uB,uECA1BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,sB,oICCnCC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,iBCoBdC,EAdA,SAACF,GAAD,OACX,kBAAC,EAAD,KACI,2BACIG,UAAWC,IAAQF,OACnBG,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOR,EAAMQ,MACbC,QAAST,EAAMU,MACfC,SAAU,S,wBCKPC,EAjBA,SAACZ,GAGZ,IAAIa,EAAc,CAACT,IAAQQ,QAM3B,OAJGZ,EAAMc,WACPD,EAAYE,KAAKX,IAAQY,QAIvB,wBAAIb,UAAWU,EAAYI,KAAK,KAAMC,QAASlB,EAAMmB,WCK9CC,EAfH,SAAC,GAIT,IAJqC,IAA3BC,EAA0B,EAA1BA,KAAKF,EAAqB,EAArBA,QAAUG,EAAW,EAAXA,MAErBC,EAAO,GAFyB,WAI5BC,GACJD,EAAKR,KAAK,kBAAC,EAAD,CAAQD,UAAWO,EAAKG,GAAGV,UAAWK,QAAS,WAAOA,EAAQG,EAAME,QAD1EA,EAAI,EAAIA,EAAGH,EAAKI,OAASD,IAAK,EAA9BA,GAMR,OACI,4BAAKD,I,iBCaEG,E,uKAlBN,IAAD,OAKDC,EAAOC,KAAK5B,MAAM0B,MAAMG,KAAI,SAACC,EAAMC,GAClC,OAAO,kBAAC,EAAD,CAAKT,MAAOS,EAAOV,KAAMS,EAAKX,QAAS,EAAKnB,MAAMmB,aAG7D,OAEI,2BAAOhB,UAAWC,IAAQsB,OACtBC,O,GAhBQK,a,gBC6HLC,E,4MA1HbC,MAAQ,CACNC,YAAc,IACdT,MAAQ,I,EASRU,OAAS,SAAC5B,GACR,IAAMsB,EAAG,YAAO,EAAKI,MAAMR,OAC3B,GAAGlB,EAAQsB,EAAIL,OAGf,IAFA,IAAIY,EAAS,GACTC,EAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OACxCd,EAAIM,EAAIL,OAASD,EAAEhB,EAAOgB,IAAI,CAClC,IAAI,IAAIe,EAAI,EAAIA,EAAG,GAAKA,IACtBF,EAAOtB,KAAK,CAACyB,GAAID,EAAIzB,WAAU,EAAQ2B,KAAKH,EAAMC,EAAED,EAAMb,UAG5DK,EAAIf,KAAKsB,GACTA,EAAS,QAIV,GAAG7B,EAAQsB,EAAIL,OAAO,CACzBiB,QAAQC,IAAI,oBAAqBb,EAAIL,QACnCiB,QAAQC,IAAI,uBAAwBnC,GACtC,IAAI,IAAIgB,EAAIM,EAAIL,OAAQD,GAAIhB,EAAQgB,IAClCkB,QAAQC,IAAI,MAAOnB,GACjBM,EAAIc,OAAOpB,GAQf,EAAKqB,SAAS,CAACnB,MAAMI,K,EAGvBgB,kBAAoB,SAACC,GACnB,EAAKF,SAAS,CAACV,YAAaY,EAAMC,OAAOxC,QACzC,EAAK4B,OAAOW,EAAMC,OAAOxC,Q,EAI3ByC,kBAAoB,SAAC3B,EAAQ4B,GAG3B,IAAMxB,EAAK,YAAO,EAAKQ,MAAMR,OAEzBP,EAAUO,EAAMJ,GAAO4B,GAAOpC,UAIlC,GAFAY,EAAMJ,GAAO4B,GAAOpC,WAAaK,EAE9BO,EAAMJ,GAAO4B,GAAOpC,UAAU,CAC/B,IAAMqC,EAAQ,IAAKC,IAAKC,MACxBF,EAAMG,WACNH,EAAMI,qBAAsB7B,EAAMJ,GAAO4B,GAAOT,KAAK,MAQvD,EAAKI,SAAS,CAACnB,MAAMA,K,EAKvB8B,kBAAoB,WAIlB,IAFA,IAAM9B,EAAK,YAAO,EAAKQ,MAAMR,OAErBF,EAAI,EAAIA,EAAEE,EAAMD,OAAQD,IAC9B,IAAI,IAAIe,EAAI,EAAIA,EAAG,GAAKA,IAAI,CACZb,EAAMF,GAAGe,GAAGzB,YACdY,EAAMF,GAAGe,GAAGzB,WAAY,GAI1C,EAAK+B,SAAS,CAACnB,MAAMA,K,EAGrB+B,iBAAmB,WACjB,IAAM/B,EAAK,YAAO,EAAKQ,MAAMR,OACvByB,EAAQ,IAAKC,IAAKC,MACtBF,EAAMG,WACRF,IAAKM,UAAUC,gBACf,WACE,IAAI,IAAInC,EAAI,EAAIA,EAAEE,EAAMD,OAAQD,IAC9B,IAAI,IAAIe,EAAI,EAAIA,EAAG,GAAKA,IAAI,CACZb,EAAMF,GAAGe,GAAGzB,WACdqC,EAAMI,qBAAqB7B,EAAMF,GAAGe,GAAGE,KAAK,SALtB,O,kEArFxCb,KAAKQ,OAAOR,KAAKM,MAAMC,e,+BAkGzB,OADAO,QAAQC,IAAIf,KAAKM,MAAMR,OAErB,yBAAKvB,UAAWC,IAAQ6B,KACtB,0CACA,8DACA,+DAEE,kBAAC,EAAD,CAAQ5B,KAAK,QACLG,MAAOoB,KAAKM,MAAMC,YAClBzB,MAAOkB,KAAKkB,oBAClB,8BAAOlB,KAAKM,MAAMC,aAClB,4BAAQjB,QAASU,KAAK4B,mBAAtB,WACA,4BAAQtC,QAASU,KAAK6B,kBAAtB,QACD,kBAAC,EAAD,CAAO/B,MAAOE,KAAKM,MAAMR,MAAOP,QAAUS,KAAKqB,yB,GAtHxCjB,aCME4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.602141fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Colum_Column__hHc30\",\"active\":\"Colum_active__2rjvX\",\"actives\":\"Colum_actives__uoC4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2JpPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__1zU0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Row_Row__1y8WO\",\"active\":\"Row_active__d5p3P\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliarry';\r\n\r\nimport classes from './Slider.module.css';\r\n\r\n\r\nconst Slider = (props) => (\r\n    <Aux>\r\n        <input \r\n            className={classes.Slider}\r\n            type=\"range\" \r\n            min=\"8\"\r\n            max=\"100\"\r\n            value={props.value}\r\n            onInput={props.slide}\r\n            onChange={null}\r\n            />\r\n    </Aux>\r\n\r\n)\r\nexport default Slider;","import React from 'react';\r\nimport classes from './Colum.module.css';\r\n\r\nconst Column = (props) => {\r\n\r\n  \r\n    let ClassSwitch = [classes.Column];\r\n\r\n    if(props.isClicked){\r\n      ClassSwitch.push(classes.active);\r\n    }\r\n\r\n    return (\r\n        <td className={ClassSwitch.join(' ')} onClick={props.clicked}></td>\r\n    )\r\n\r\n}\r\n    \r\n\r\n\r\nexport default Column;","import React from 'react';\r\nimport classes from './Row.module.css';\r\nimport Column from './Column/Column';\r\nconst Row = ({cols,clicked , rowId}) => {\r\n\r\n    let Cols = [];\r\n\r\n    for(let i = 0 ; i< cols.length ; i++){\r\n        Cols.push(<Column isClicked={cols[i].isClicked} clicked={() => {clicked(rowId,i)}}/>)\r\n    }\r\n    \r\n \r\n\r\n    return (\r\n        <tr>{Cols}</tr>\r\n    )\r\n\r\n}\r\nexport default Row;","import React, { Component } from 'react';\r\nimport Row from '../Row/Row';\r\nimport classes from './Table.module.css';\r\n\r\n\r\nclass Table extends Component{\r\n\r\n\r\n\r\nrender(){\r\n\r\n\r\n    \r\n\r\n   let Rows = this.props.Table.map((row , index) => {\r\n        return <Row rowId={index} cols={row} clicked={this.props.clicked}/>\r\n    })\r\n\r\n    return (\r\n\r\n        <table className={classes.Table}>\r\n           {Rows}\r\n        </table>\r\n    )\r\n}\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Slider from './components/Slider/Slider';\nimport Table from './components/Table/Table';\nimport Tone from 'tone';\n\nclass App extends Component {\n\n  state = {\n    SliderValue : '8',\n    Table : [],\n    }\n\n    componentDidMount(){\n      this.addRow(this.state.SliderValue);\n    }\n\n    \n\n    addRow = (value) => {\n      const row = [...this.state.Table];\n      if(value > row.length){\n      let column = [];\n      let notes = ['C4','G4','E4','B4','C1','B1','D1','F#5'];\n      for(let i = row.length ; i<value; i++){\n          for(let j = 0 ; j< 12 ; j++){\n            column.push({id: j , isClicked:false , note:notes[j%notes.length]}) ;\n            \n          }\n          row.push(column);\n          column = [];\n          \n      }\n    }\n    else if(value < row.length){\n      console.log(\"where we are now:\" ,row.length);\n        console.log(\"where we want to be \" ,value)\n      for(let i = row.length; i >=value ; i--){\n        console.log(\"ddd\" ,i);\n          row.splice(i);\n      }\n    }\n\n     \n\n     \n\n      this.setState({Table:row});\n  }\n\n    MoveSliderHandler = (event) => {\n      this.setState({SliderValue: event.target.value});\n      this.addRow(event.target.value);\n      \n    }\n\n    clickedColHandler = (rowId , colId) => {\n\n\n      const Table = [...this.state.Table];\n      \n      let clicked = Table[rowId][colId].isClicked;\n\n      Table[rowId][colId].isClicked = !clicked;\n\n      if(Table[rowId][colId].isClicked){\n        const synth = new  Tone.Synth();\n        synth.toMaster();\n        synth.triggerAttackRelease( Table[rowId][colId].note,'8n');\n      }\n      // let row = rows.filter(item => item.id === rowId && item.colId === colId);\n\n      // console.log(row);\n      // let isClicked =!rows[id].cols.isClicked;\n      // rows[id].cols.isClicked = isClicked;\n\n      this.setState({Table:Table});\n\n\n    }\n\n    UncheckColHandler = () => {\n      \n      const Table = [...this.state.Table];\n\n      for(let i = 0 ; i<Table.length; i++){\n        for(let j = 0 ; j< 12 ; j++){\n          let checked = Table[i][j].isClicked;\n          if(checked) Table[i][j].isClicked = false;\n        }   \n    }\n\n    this.setState({Table:Table});\n    }\n\n    playMusicHandler = () => {\n      const Table = [...this.state.Table];\n      const synth = new  Tone.Synth();\n        synth.toMaster();\n      Tone.Transport.scheduleRepeat(repeate , '8n');\n      function  repeate () {\n        for(let i = 0 ; i<Table.length; i++){\n          for(let j = 0 ; j< 12 ; j++){\n            let checked = Table[i][j].isClicked;\n            if(checked) synth.triggerAttackRelease(Table[i][j].note,'8n');\n          }   \n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.Table);\n    return (\n      <div className={classes.App}>\n        <h3>Music Grid</h3>\n        <p>Turn on sound. Tap on the grid.</p>\n        <p>Hit Play. You'll figure it out:)</p>\n\n          <Slider type=\"range\"\n                  value={this.state.SliderValue}\n                  slide={this.MoveSliderHandler} />\n            <span>{this.state.SliderValue}</span>\n            <button onClick={this.UncheckColHandler}>UnCheck</button>\n            <button onClick={this.playMusicHandler}>play</button>\n           <Table Table={this.state.Table} clicked= {this.clickedColHandler}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}